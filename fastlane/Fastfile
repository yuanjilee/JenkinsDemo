# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Description of what the lane does"
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end

  lane :test do

  # automatic_code_signing
	  
  unlock_keychain( # If the keychain file is located in the standard location `~/Library/Keychains`, then it is sufficient to provide the keychain file name, or file name with its suffix.
  path: "/Users/Shared/Jenkins/Library/Keychains/login.keychain",
  password: "123"
	  )	  

  get_build_number
  increment_build_number

  get_certificates        
  get_provisioning_profile(app_identifier: "com.yctech.jenkins")
  get_provisioning_profile(app_identifier: "com.yctech.jenkins.Jenkins")

  gym(
    scheme: "JenkinsDemo",
    export_options: {
     signingStyle: "automatic"
    }
  )

  # build_app
  # deliver(force: true)
  # pilot(skip_waiting_for_build_processing: true)  # ts
	  
    upload_to_testflight(skip_waiting_for_build_processing: true)

  end

  lane :release do |option|
 	 # get_certificates           # invokes cert
  	 # get_provisioning_profile   # invokes sigh


  	 # enable_automatic_code_signing(path: "./JenkinsDemo.xcodeproj")
  	 # sync_code_signing(type: "appstore")
 	 # build_app(scheme: "JenkinsDemo")
 	 # upload_to_testflight

	#证书签名
    # sigh

    cert
    sigh(force: true)


    #编译打包
    scheme_name = option[:scheme]
    configuration = 'Release'
    version = '1.0'# get_info_plist_value(path: "./#{scheme_name}/Info.plist", key: "CFBundleShortVersionString")
    build = '4'# get_info_plist_value(path: "./#{scheme_name}/Info.plist", key: "CFBundleVersion")
    output_directory = File.expand_path("..", Dir.pwd) + File::Separator + 'build'
    output_name = "#{scheme_name}_#{configuration}_#{version}_#{build}_#{Time.now.strftime('%Y%m%d%H%M%S')}.ipa"
    gym(scheme: scheme_name, clean: true, export_method:'app-store', configuration: configuration, output_directory: output_directory, output_name: output_name)

    # build_app

    # upload_to_testflight
    # deliver(force: true)

  end

end
